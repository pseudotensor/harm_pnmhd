analsol.c:#if(LINUXCLUSTER==0)
analsol.c:#if(USEMPI)
analsol.c:#if(MAGBONDI==0)
analsol.c:#if(DEBUGBONDI)
analsol.c:#if(COORD==3)
analsol.c:#if(MAGBONDI==0)
analsol.c:#if(DEBUGBONDI)
analsol.c:#if(MAGBONDI==0)
analsol.c:#if(MAGBONDI)
analsol.c:#if(MAGBONDI==0)
analsol.c:#if(DEBUGBONDI)
analsol.c:#if(MAGBONDI==0)
analsol.c:#if(DEBUGBONDI)
analsol.c:#if(MAGBONDI==0)
analsol.c:#if(MAGBONDI==0)
analsol.c:#if(MAGBONDI==0)
analsol.c:#if(MAGBONDI==0)
analsol.c:#if(MAGBONDI==0)
analsol.c:#if(MAGBONDI==0)
analsol.c:#if(FORMGEN)
analsol.c:#if(MAGBONDI==1)
analsol.c:#if(MAGBONDI)
analsol.c:#if(COORD==3)
analsol.c:#if(MAGBONDI==0)
analsol.c:#if(USEMPI)
analsol.c:#if(MAGBONDI)
analsol.c:#if(USEMPI)
analsol.c:#if(USEMPI)
analsol.c:#if(USEMPI)
analsol.c:#if(USEMPI)
analsol.c:#if(USEMPI)
analsol.c:#if(USEMPI)
analsol.c:#if(USEMPI)
analsol.c:#if(USEMPI)
analsol.c:#if(USEMPI)
analsol.c:#if(MDOTMEM)
bold.c:#if(FORCEOUTFLOW)
bold.c:#if(DOBOUNDSCA)
bold.c:#if(!INNERBC)
bold.c:#if(SCABCCORNER)
bold.c:#if(COMPDIM<3)
bold.c:#if(COMPDIM<3)
bold.c:#if(COMPDIM<3)
bold.c:#if(COMPDIM<3)
bold.c:#if(COMPDIM<3)
bold.c:#if(COMPDIM<3)
bold.c:#if(COMPDIM<3)
bold.c:#if(COMPDIM<3)
bold.c:#if(COMPDIM<3)
bold.c:#if(COMPDIM<3)
bold.c:#if(DOBOUNDVEC)  
bold.c:#if(!INNERBC )
bold.c:#if(HAWLEYBOUND==0)
bold.c:#if(HAWLEYBOUND==0)
bold.c:#if(HAWLEYBOUND==0)
bold.c:#if(VECBCCORNER)
bold.c:#if(COMPDIM<3)
bold.c:#if(COMPDIM<3)
bold.c:#if(COMPDIM<3)
bold.c:#if(COMPDIM<3)
bold.c:#if(COMPDIM<3)
bold.c:#if(COMPDIM<3)
bold.c:#if(COMPDIM<3)
bold.c:#if(COMPDIM<3)
bold.c:#if(COMPDIM<3)
bold.c:#if(COMPDIM<3)
bold.c:#if(USEMPI)
boundgen1.c:#if(DOTRUEBOUNDARY==1)
boundgen1.c:#if(DOBOUNDSCA)
boundgen1.c:#if(DOBOUNDVEC)  
boundgen1.c:#if(DOBOUNDVEC)  
boundgen1.c:#if(DOINTERNALBOUNDARY==1)
boundgen1.c:#if(USEMPI)
boundgen1old.c:#if(DOBOUNDSCA)
boundgen1old.c:#if(DEBUG)
boundgen1old.c:#if(DOBOUNDVEC)  
boundgen1old.c:#if(DOBOUNDVEC)  
boundgen1old.c:#if(USEMPI)
boundgensimple1.c:#if(DOTRUEBOUNDARY==1)
boundgensimple1.c:#if(DOBOUNDSCA)
boundgensimple1.c:#if(DOBOUNDVEC)  
boundgensimple1.c:#if(DOBOUNDVEC)  
boundgensimple1.c:#if(DOINTERNALBOUNDARY==1)
boundgensimple1.c:#if(USEMPI)
boundgensimple1old.c:#if(DOBOUNDSCA)
boundgensimple1old.c:#if(DOBOUNDVEC)  
boundgensimple1old.c:#if(DOBOUNDVEC)  
boundgensimple1old.c:#if(USEMPI)
boundmpi.c:#if(LINUXCLUSTER==0)
boundmpi.c:#if(USEMPI)
boundmpi.c:#if(USEMPI)
boundmpi.c:#if(DOBOUNDVEC)   
boundmpi.c:#if(COMPDIM>=1)
boundmpi.c:#if(DOBOUNDSCA)
boundmpi.c:#if(DEBUGMPI>0)
boundmpi.c:#if(DEBUGMPI>1)
boundmpi.c:#if(DOBOUNDVEC)  
boundmpi.c:#if(DEBUGMPI>0)
boundmpi.c:#if(DEBUGMPI>1)
boundmpi.c:#if(DOBOUNDSCA)
boundmpi.c:#if(DEBUGMPI>0)
boundmpi.c:#if(DEBUGMPI>1)
boundmpi.c:#if(DOBOUNDVEC)  
boundmpi.c:#if(DEBUGMPI>0)
boundmpi.c:#if(DEBUGMPI>1)
boundmpi.c:#if(DOBOUNDSCA)
boundmpi.c:#if(DEBUGMPI>0)
boundmpi.c:#if(DEBUGMPI>1)
boundmpi.c:#if(DOBOUNDVEC)  
boundmpi.c:#if(DEBUGMPI>0)
boundmpi.c:#if(DEBUGMPI>1)
boundmpi.c:#if(COMPDIM>=2)
boundmpi.c:#if(DOBOUNDSCA)
boundmpi.c:#if(DEBUGMPI>0)
boundmpi.c:#if(DEBUGMPI>1)
boundmpi.c:#if(DOBOUNDVEC)  
boundmpi.c:#if(DEBUGMPI>0)
boundmpi.c:#if(DEBUGMPI>1)
boundmpi.c:#if(DOBOUNDSCA)
boundmpi.c:#if(DEBUGMPI>0)
boundmpi.c:#if(DEBUGMPI>1)
boundmpi.c:#if(DOBOUNDVEC)  
boundmpi.c:#if(DEBUGMPI>0)
boundmpi.c:#if(DEBUGMPI>1)
boundmpi.c:#if(DOBOUNDSCA)
boundmpi.c:#if(DEBUGMPI>0)
boundmpi.c:#if(DEBUGMPI>1)
boundmpi.c:#if(DOBOUNDVEC)  
boundmpi.c:#if(DEBUGMPI>0)
boundmpi.c:#if(DEBUGMPI>1)
boundmpi.c:#if(COMPDIM>=3)
boundmpi.c:#if(DOBOUNDSCA)
boundmpi.c:#if(DEBUGMPI>0)
boundmpi.c:#if(DEBUGMPI>1)
boundmpi.c:#if(DOBOUNDVEC)  
boundmpi.c:#if(DEBUGMPI>0)
boundmpi.c:#if(DEBUGMPI>1)
boundmpi.c:#if(DOBOUNDSCA)
boundmpi.c:#if(DEBUGMPI>0)
boundmpi.c:#if(DEBUGMPI>1)
boundmpi.c:#if(DOBOUNDVEC)  
boundmpi.c:#if(DEBUGMPI>0)
boundmpi.c:#if(DEBUGMPI>1)
boundmpi.c:#if(DOBOUNDSCA)
boundmpi.c:#if(DEBUGMPI>0)
boundmpi.c:#if(DEBUGMPI>1)
boundmpi.c:#if(DOBOUNDVEC)  
boundmpi.c:#if(DEBUGMPI>0)
boundmpi.c:#if(DEBUGMPI>1)
boundrect1.c:#if(FORCEOUTFLOW)
boundrect1.c:#if(DOTRUEBOUNDARY==1)
boundrect1.c:#if(DOBOUNDSCA)
boundrect1.c:#if(!INNERBC)
boundrect1.c:#if(PUREBC==0)
boundrect1.c:#if(SCABCCORNER)
boundrect1.c:#if(PUREBC==0)
boundrect1.c:#if(PUREBC==0)
boundrect1.c:#if(PUREBC==0)
boundrect1.c:#if(PUREBC==0)
boundrect1.c:#if(COMPDIM<3)
boundrect1.c:#if(COMPDIM<3)
boundrect1.c:#if(COMPDIM<3)
boundrect1.c:#if(COMPDIM<3)
boundrect1.c:#if(COMPDIM<3)
boundrect1.c:#if(COMPDIM<3)
boundrect1.c:#if(COMPDIM<3)
boundrect1.c:#if(COMPDIM<3)
boundrect1.c:#if(COMPDIM<3)
boundrect1.c:#if(COMPDIM<3)
boundrect1.c:#if(DOBOUNDVEC)  
boundrect1.c:#if(!INNERBC )
boundrect1.c:#if(PUREBC==0)
boundrect1.c:#if(HAWLEYBOUND==0)
boundrect1.c:#if(HAWLEYBOUND==0)
boundrect1.c:#if(HAWLEYBOUND==0)
boundrect1.c:#if(VECBCCORNER)
boundrect1.c:#if(PUREBC==0)
boundrect1.c:#if(PUREBC==0)
boundrect1.c:#if(PUREBC==0)
boundrect1.c:#if(PUREBC==0)
boundrect1.c:#if(COMPDIM<3)
boundrect1.c:#if(COMPDIM<3)
boundrect1.c:#if(COMPDIM<3)
boundrect1.c:#if(COMPDIM<3)
boundrect1.c:#if(COMPDIM<3)
boundrect1.c:#if(COMPDIM<3)
boundrect1.c:#if(COMPDIM<3)
boundrect1.c:#if(COMPDIM<3)
boundrect1.c:#if(COMPDIM<3)
boundrect1.c:#if(COMPDIM<3)
boundrect1.c:#if(DOINTERNALBOUNDARY==1)
boundrect1.c:#if(USEMPI)
boundrectold.c:#if(FORCEOUTFLOW)
boundrectold.c:#if(DOBOUNDSCA)
boundrectold.c:#if(!INNERBC)
boundrectold.c:#if(SCABCCORNER)
boundrectold.c:#if(DOBOUNDVEC)  
boundrectold.c:#if(!INNERBC )
boundrectold.c:#if(HAWLEYBOUND==0)
boundrectold.c:#if(HAWLEYBOUND==0)
boundrectold.c:#if(HAWLEYBOUND==0)
boundrectold.c:#if(VECBCCORNER)
boundrectold.c:#if(COMPDIM<3)
boundrectold.c:#if(COMPDIM<3)
boundrectold.c:#if(COMPDIM<3)
boundrectold.c:#if(COMPDIM<3)
boundrectold.c:#if(COMPDIM<3)
boundrectold.c:#if(COMPDIM<3)
boundrectold.c:#if(COMPDIM<3)
boundrectold.c:#if(COMPDIM<3)
boundrectold.c:#if(COMPDIM<3)
boundrectold.c:#if(COMPDIM<3)
boundrectold.c:#if(USEMPI)
convtest.c:#if(ROFILE==0)
diag.c:#if(LINUXCLUSTER==0)
diag.c:#if(SENSITIVE==1)
diag.c:#if(USEMPI)
diag.c:#if(TVDLF)
diag.c:#if(USEMPI)
diag.c:#if(VISCMEM)
diag.c:#if(USEMPI)
diag.c:#if(TVDLF==1)
diag.c:#if(USEMPI)
diag.c:#if(USEMPI)
diag.c:#if(USEMPI)
diag.c:#if(USEMPI)
diag.c:#if(USEMPI)
diag.c:#if(USEMPI)
diag.c:#if(USEMPI)
diag.c:#if(USEMPI)
diag.c:#if(ALLZONECENTERED==0)
diag.c:#if(COORD==3)
diag.c:#if(USEMPI)
diag.c:#if(USEMPI)
diag.c:#if(((COORD==3)&&(N3>1))) // otherwise not relevant and just slows things down
diag.c:#if(COORD==3)
diag.c:#if(COORD==3)
diag.c:#if(COORD==3)
diag.c:#if(COORD==3)
diag.c:#if(COORD==3)
diag.c:#if(COORD==1)
diag.c:#if(USEMPI)
diag.c:#if(USEMPI)
diag.c:#if(USEMPI)
diag.c:#if(USEMPI&&USEROMIO)
diag.c:#if(USEMPI&&USEROMIO)
diag.c:#if(FLOORDUMPFLAG)
diag.c:#if(VISCMEM)
diag.c:#if(DOAVGDIAGMEMORY)
diag.c:#if(!PPCLEAN)
diag.c:#if(VISCMEM)
diag.c:#if(VISCMEM)
diag.c:#if(VISCMEM)
diag.c:#if(POSTPROC)
diag.c:#if(USEMPI)
diag.c:#if(FLOATTYPE==0)
diag.c:#if(POSTPROC==1)
diag.c:#if(POSTPROC==1)
diag.c:#if(POSTPROC==1)
diag.c:#if(POSTPROC==1)
diag.c:#if(POSTPROC==1)
diag.c:#if(USEMPI&&USEROMIO)
diag.c:#if(!GAMMIEIMAGE)
diag.c:#if(POSTPROC==0)
diag.c:#if(USEMPI)
diag.c:#if(USEMPI&&USEROMIO)
diag.c:#if(USEMPI&&USEROMIO)
diag.c:#if(USEGM==0)
diag.c:#if(USEGM==0)
diag.c:#if(USEGM==0)
diag.c:#if(USEMPI)
diag.c:#if(USEMPI)
diag.c:#if(USEMPI)
diag.c:#if(USEMPI)
diag.c:#if(USEMPI&&USEROMIO)
diag.c:#if(USEMPI&&USEROMIO)
diag.c:#if(USEMPI)
diag.c:#if(USEMPI&&USEROMIO)
diag.c:#if(USEMPI&&USEROMIO)
diag.c:#if(USEMPI)
diag.c:#if(USEMPI)
diagflux.c:#if(LINUXCLUSTER==0)
diagflux.c:#if(COORD==1)
diagflux.c:#if(COORD==1)
diagflux.c:#if(COORD==1)
dqcalc.c:#if(LINUXCLUSTER==0)
dqcalc.c:#if(DQCURVATURE&&(COORD>1))
dqcalc.c:#if(DQCURVATURE&&(COORD>1))
dqcalc.c:#if(DQCURVATURE&&(COORD>1))
dqcalc.c:#if(DQCURVATURE&&(COORD>1))
dqcalc.c:#if(DQCURVATURE&&(COORD>1))
gpar.c:#if(LINUXCLUSTER==0)
init.c:#if(LINUXCLUSTER==0)
init.c:#if(SENSITIVE==1)
init.c:#if((COORD==3)&&(N1>3))
init.c:#if(TVDLF==0)
init.c:#if(USEMPI)
init.c:#if(USEMPI)
init.c:#if(!PPCLEAN)
init.c:#if(USEMPI)
init.c:#if(TVDLF==0)
init.c:#if((TVDLF==0)&&(POSTPROC==0))
init.c:#if((TVDLF==0)&&(POSTPROC==0)) // no need if POSTPROC==1, don't want if PPCLEAN=1
init.c:#if(TVDLF==1)
init.c:#if(!PPCLEAN)
init.c:#if(USEMPI)
init.c:#if(VISCMEM)
init.c:#if(analoutput==6)
init.c:#if(RESMEM)
init.c:#if(FLOATTYPE==0)
init.c:#if(USEMPI)
init.c:#if(USEMPI&&USEROMIO)
init.c:#if(USEMPI)
init.c:#if(USEMPI&&USEROMIO)
init.c:#if(LOWMEMMODE==0)
init.c:#if(USEMPI&&USEROMIO)
init.c:#if(LOWMEMMODE==0)
init.c:#if(USEMPI)
init.c:#if(USEMPI&&USEROMIO)
init.c:#if(USEMPI&&USEROMIO)
init.c:#if(USEMPI&&USEROMIO)
init.c:#if(!GAMMIEIMAGE)
init.c:#if(!GAMMIEIMAGE)
init.c:#if(GAMMIEIMAGE)
init.c:#if(GAMMIEIMAGE)
init.c:#if(USEMPI)
init.c:#if(USEMPI)
init.c:#if(USEMPI&&USEROMIO)
init.c:#if(USEMPI&&USEROMIO)
init.c:#if(USEMPI&&USEROMIO)
init.c:#if(LOWMEMMODE==0)
init.c:#if(FLOATTYPE==0)
init.c:#if(LOWMEMMODE==0)
init.c:#if(LOWMEMMODE==0)
init.c:#if(USEMPI&&USEROMIO)
init.c:#if(POSTPROC==1)
init.c:#if(GRAVACC&&(POSTPROC==0))
init.c:#if(GRAVITOMAGNETIC&&(POSTPROC==0))
init.c:#if(DOAVGDIAGMEMORY)
init.c:#if(FLOORDUMPFLAGMEMORY)
init.c:#if((LOWMEMMODE==0)&&(TVDLF==0))
init.c:#if(LOWMEMMODE==0)
init.c:#if((PUREBC==0)&&(BOUNDTYPE==1))
init.c:#if((BOUNDTYPE==3)&&(POSTPROC==0))
init.c:#if((LOOPTYPE==1)&&((DOLOSSDIAGMEMORY)&&(POSTPROC==0)) )
init.c:#if(MDOTMEM&&(POSTPROC==0))
init.c:#if((TVDLF==0)&&(POSTPROC==0))
init.c:#if(VISCMEM)
init.c:#if(RESMEM&&(POSTPROC==0))
init.c:#if(TVDLF==0)
init.c:#if(MDOTMEMANAL&&(POSTPROC==0))
init.c:#if(ALFVENLIMIT)
init.c:#if(TVDLF==0)
init.c:#if(VISCMEM)
init.c:#if(POSTPROC==1)
init.c:#if(POSTPROC==1)
init.c:#if((TVDLF==1)&&(POSTPROC==0))
init.c:#if(USEMPI==0)
init.c:#if(USEMPI==0)
init.c:#if(USEMPI==0)
init.c:#if(USEMPI==0)
init.c:#if(USEMPI==0)
init.c:#if(USEMPI==0)
init.c:#if(USEMPI==0)
init.c:#if(USEMPI==0)
init.c:#if(USEMPI==0)
init.c:#if(USEMPI==0)
init.c:#if(USEMPI)
init.c:#if(USEMPI)
init.c:#if(USEMPI)
init.c:#if(COORD==1)
init.c:#if(COORD==2)
init.c:#if(COORD==3)
init.c:#if(USEMPI)
main.c:#if(LINUXCLUSTER==1)
main.c:#if(TIMEMETHOD==0)
main.c:#if(USEMPI)
main.c:#if(USEMPI)
main.c:#if(SENSITIVE==1)
main.c:#if(USEMPI)
numerics.c:#if(LINUXCLUSTER==0)
numerics.c:#if(POSTPROC==1)
perftest.c://#if(NUMTRIALSX<=1)
perftest.c://#if(NUMTRIALSY<=1)
perftesttrial.c:#if(NUMTRIALSX<=1)
perftesttrial.c:#if(NUMTRIALSY<=1)
step2d.c:#if(MDOTMEM)
step2d.c:#if(VISCMEM)
step2d.c:#if(RHOINTERP==0)
step2d.c:#if(SNCODE)
step2d.c:#if(RHOINTERP==0)
step2d.c:#if(RHOINTERP==0)
step2d.c:#if(RHOINTERP==0)
step2d.c:#if(SYMFORCEMAG==0)
step2d.c:#if(SYMFUNKED==0)
step2d.c:#if(SYMFORCEMAG==0)
step2d.c:#if(RHOINTERP==0)
step2d.c:#if(ALFVENLIMIT==0)
step2d.c:#if(TORVX1)
step2d.c:#if(SNCODE)
step2d.c:#if(TORBX1)
step2d.c:#if(SNCODE)
step2d.c:#if(RHOINTERP==0)
step2d.c:#if(SNCODE)
step2d.c:#if(RHOINTERP==0)
step2d.c:#if(RHOINTERP==0)
step2d.c:#if(RHOINTERP==0)
step2d.c:#if(SYMFORCEMAG==0)
step2d.c:#if(SYMFUNKED==0)
step2d.c:#if(SYMFORCEMAG==0)
step2d.c:#if(RHOINTERP==0)
step2d.c:#if(ALFVENLIMIT==0)
step2d.c:#if(TORVX2)
step2d.c:#if(SNCODE)
step2d.c:#if(TORBX2)
step2d.c:#if(SNCODE)
step2d.c:#if((FLOATTYPE==0)&&(SYMFORCEMAG==1))
step2d.c:#if(RHOINTERP==0)
step2d.c:#if((FLOATTYPE==0)&&(SYMFORCEMAG==1))
step2d.c:#if(RHOINTERP==0)
step2d.c:#if(RHOINTERP==0)
step2d.c:#if(SYMFORCEMAG==0)
step2d.c:#if(SYMGOOD==0)
step2d.c:#if(SYMFORCEMAG==0)
step2d.c:#if(RHOINTERP==0)
step2d.c:#if(RHOINTERP==0)
step2d.c:#if(SYMFORCEMAG==0)
step2d.c:#if(SYMFUNKEDM1==0)
step2d.c:#if(SYMFORCEMAG==0)
step2d.c:#if(RHOINTERP==0)
step2d.c:#if(RHOINTERP==0)
step2d.c:#if(RHOINTERP==0)
step2d.c:#if(SYMFORCEMAG==0)
step2d.c:#if(SYMGOOD==0)
step2d.c:#if(SYMGOOD==0)
step2d.c:#if(SYMFORCEMAG==0)
step2d.c:#if(RHOINTERP==0)
step2d.c:#if(RHOINTERP==0)
step2d.c:#if(SYMFORCEMAG==0)
step2d.c:#if(SYMFUNKEDM2==0)
step2d.c:#if(SYMFORCEMAG==0)
step2d.c:#if(RHOINTERP==0)
step2d.c:#if(ALFVENLIMIT==0)
step2d.c:#if(ALFVENLIMIT==0)
stepgen.c:#if(MDOTMEM)
stepgen.c:#if(VISCMEM)
stepgen.c:#if(COORD==3)
stepgen.c:#if(FORCEIEINTERNAL)
stepgen.c:#if(DOFLOORD2==1)
stepgen.c:#if(N1>1)
stepgen.c:#if(ALFVENLIMIT==0)
stepgen.c:#if(PDEN)
stepgen.c:#if(RELIE)
stepgen.c:#if(PGRAV)
stepgen.c:#if((GRAVACC==0)||(COORD<3))
stepgen.c:#if(PMAG==1)
stepgen.c:#if((COORD==3)&&(GRAVITOMAGNETIC==1)) // only allowed if in spc, like curvature term
stepgen.c:#if(CURVE==1) // done even if 1-d    
stepgen.c:#if(COORD==3)
stepgen.c:#if(N2>1)
stepgen.c:#if(ALFVENLIMIT==0)
stepgen.c:#if(PDEN==1)
stepgen.c:#if(RELIE)
stepgen.c:#if(PGRAV)
stepgen.c:#if((GRAVACC==0)||(COORD<3))
stepgen.c:#if(PMAG==1)
stepgen.c:#if((COORD==3)&&(GRAVITOMAGNETIC==1)) // only allowed if in spc, like curvature term
stepgen.c:#if(CURVE==1) // done even if 1-d.
stepgen.c:#if( (COORD==2)||(COORD==3))
stepgen.c:#if(N3>1)
stepgen.c:#if(ALFVENLIMIT==0)
stepgen.c:#if(PDEN==1)
stepgen.c:#if(RELIE)
stepgen.c:#if(PGRAV)
stepgen.c:#if((GRAVACC==0)||(COORD<3))
stepgen.c:#if(PMAG==1)
stepgen.c:#if((COORD==3)&&(GRAVITOMAGNETIC==1)) // only allowed if in spc, like curvature term
stepgen.c:#if(TIMEMETHOD==0)
stepgen.c:#if(VISC_TENSOR==1) // not right in 3D, but doesn't seem to work anyways in 1D or 2D
stepgen.c:#if(COMPDIM==3)
stepgen.c:#if(COMPDIM==3)
stepgen.c:#if(VISC_LINEAR)
stepgen.c:#if(COMPDIM==3)
stepgen.c:#if(VISC_TENSOR==0)
stepgen.c:#if(COMPDIM==3)
stepgen.c:#if(VISC_TENSOR==0)
stepgen.c:#if(COMPDIM==3)
stepgen.c:#if(VISC_TENSOR==0)
stepgen.c:#if(VISC_TENSOR==0)
stepgen.c:#if(VISCE11)
stepgen.c:#if(VISCE22)
stepgen.c:#if(VISCE33)
stepgen.c:#if(VISCE13)
stepgen.c:	  //#if(ANALOUTPUT==6)
stepgen.c:#if(VISCE23)
stepgen.c:#if(VISCE12)
stepgen.c:#if(COORD>=2)
stepgen.c:#if(COMPDIM==3)
stepgen.c:#if(COMPDIM==3)
stepgen.c:#if(COORD>=2)
stepgen.c:#if(COMPDIM==3)
stepgen.c:#if(COMPDIM==3)
stepgen.c:#if(COORD>=2)
stepgen.c:#if(COMPDIM==3)
stepgen.c:#if(COMPDIM==3)
stepgen.c:#if(VISCE11)
stepgen.c:#if(VISCE22)
stepgen.c:#if(VISCE33)
stepgen.c:#if(COMPDIM==3)
stepgen.c:#if(VISCE12)
stepgen.c:#if(VISCE13)
stepgen.c:#if(COMPDIM==3)
stepgen.c:#if(VISCE23)
stepgen.c:#if(COMPDIM==3)
stepgen.c:    //#if(ANALOUTPUT==6)
stepgen.c:#if(VISCE11)
stepgen.c:#if(VISCE22)
stepgen.c:#if(VISCE33)
stepgen.c:#if(COMPDIM==3)
stepgen.c:#if(VISCE12)
stepgen.c:#if(VISCE13)
stepgen.c:#if(COMPDIM==3)
stepgen.c:#if(VISCE23)
stepgen.c:#if(COMPDIM==3)
stepgen.c:    //#if(ANALOUTPUT==6)
stepgen.c:#if(FLOORDUMPFLAG==1)
stepgen.c:#if(DOFLOORDIAG==1)
stepgen.c:#if(DOFLOORD2==1)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if((FLOATTYPE==0)&&(SYMFORCEMAG==1))
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(SYMGOOD==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(N1>1)    // only need b1prim[2] if N1>1
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(SYMFUNKEDM1==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(SYMGOOD==0)
stepmag.c:#if(SYMGOOD==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(N2>1) // only need b1prim[1] if N2>1
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(SYMFUNKEDM2==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(SYMGOOD==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(N1>1) // otherwise no need for b1prim[3]
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(SYMFUNKEDM1==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(SYMGOOD==0)
stepmag.c:#if(SYMGOOD==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(N3>1) // otherwise b2prim[1] not needed
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(SYMFUNKEDM2==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(SYMGOOD==0)
stepmag.c:#if(SYMGOOD==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(N2>1) // otherwise no b2prim[3] needed
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(SYMFUNKEDM2==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(SYMGOOD==0)
stepmag.c:#if(SYMGOOD==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(N3>1) // otherwise no b2prim[2] needed
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(SYMFUNKEDM2==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(ALFVENLIMIT==0)
stepmag.c:#if(N2!=1)
stepmag.c:#if(N3!=1)
stepmag.c:#if(N2!=1)
stepmag.c:#if(N3!=1)
stepmag.c:#if(ALFVENLIMIT==0)
stepmag.c:#if(N1!=1)
stepmag.c:#if(N3!=1)
stepmag.c:#if(N1!=1)
stepmag.c:#if(N3!=1)
stepmag.c:#if(ALFVENLIMIT==0)
stepmag.c:#if(N1!=1)
stepmag.c:#if(N2!=1)
stepmag.c:#if(N1!=1)
stepmag.c:#if(N2!=1)
stepmag.c:#if(N2!=1)
stepmag.c:#if(N3!=1)
stepmag.c:#if(N1!=1)
stepmag.c:#if(N3!=1)
stepmag.c:#if(N1!=1)
stepmag.c:#if(N2!=1)
stepmag.c:#if(N2!=1)
stepmag.c:#if(N3!=1) // no change for volume way
stepmag.c:#if(N1!=1)
stepmag.c:#if(N3!=1) // no change for volume way
stepmag.c:#if(N1!=1)
stepmag.c:#if(N2!=1)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(SYMGOOD==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(SYMGOOD==0)
stepmag.c:#if(SYMGOOD==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(SYMGOOD==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(SYMGOOD==0)
stepmag.c:#if(SYMGOOD==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(SYMGOOD==0)
stepmag.c:#if(SYMGOOD==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(SYMGOOD==0)
stepmag.c:#if(SYMGOOD==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(N2!=1)
stepmag.c:#if(N3!=1)
stepmag.c:#if(N1!=1)
stepmag.c:#if(N3!=1)
stepmag.c:#if(N1!=1)
stepmag.c:#if(N2!=1)
stepmag.c:#if(N2!=1)
stepmag.c:#if(N3!=1) // no change for volume way
stepmag.c:#if(N1!=1)
stepmag.c:#if(N3!=1) // no change for volume way
stepmag.c:#if(N1!=1)
stepmag.c:#if(N2!=1)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(SYMFUNKEDM1==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(SYMFUNKEDM2==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(SYMFUNKEDM1==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(SYMFUNKEDM2==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(SYMFUNKEDM2==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(SYMFUNKEDM2==0)
stepmag.c:#if(SYMFORCEMAG==0)
stepmag.c:#if(RHOINTERP==0)
stepmag.c:#if(ALFVENLIMIT==0)
stepmag.c:#if(N2!=1)
stepmag.c:#if(N3!=1)
stepmag.c:#if(N2!=1)
stepmag.c:#if(N3!=1)
stepmag.c:#if(ALFVENLIMIT==0)
stepmag.c:#if(N1!=1)
stepmag.c:#if(N3!=1)
stepmag.c:#if(N1!=1)
stepmag.c:#if(N3!=1)
stepmag.c:#if(ALFVENLIMIT==0)
stepmag.c:#if(N1!=1)
stepmag.c:#if(N2!=1)
stepmag.c:#if(N1!=1)
stepmag.c:#if(N2!=1)
steptvdlf.c:// advint instead of #if(1) craziness, and SYMFLUX instead of #if(1)
steptvdlf.c:#if(LINUXCLUSTER==0)
steptvdlf.c:#if(FULLINPUT==2)
steptvdlf.c:#if(SYMFLUX)
sweep.c:#if(LINUXCLUSTER==0)
sweep.c:#if((FLOATTYPE==0)&&(SYMFORCEHD==1))
sweep.c:#if((FLOATTYPE==0)&&(SYMFORCEHD==1))
sweep.c:#if(SYMFORCEHD==0)
sweep.c:#if(SYMFORCEHD==0)
sweep.c:#if(SYMFORCEHD==0)
sweep.c:#if(SYMFORCEHD==0)
sweep.c:#if(SYMFORCEHD==0)     
sweep.c:#if(SYMFORCEHD==0)
sweep.c:#if(SYMFORCEHD==0)
sweep.c:#if(SYMFORCEHD==0)
sweep.c:#if(SYMFORCEHD==0)
sweep.c:#if(SYMFORCEHD==0)
sweep.c:#if(SYMFORCEHD==0)
sweep.c:#if(SYMFORCEHD==0)
sweep.c:#if(SYMFORCEHD==0)
sweep.c:#if(SYMFORCEHD==0)
sweep.c:#if(SYMFORCEHD==0)
sweep.c:#if(SYMFORCEHD==0)
sweep.c:#if(SYMFORCEHD==0)
timestep.c:#if(LINUXCLUSTER==0)
timestep.c:#if(BOUNDTYPE==3)
timestep.c:#if(TS0CHECK)
timestep.c:#if(CHECKDTLOW==1)
timestep.c:#if(USEMPI)
timestep.c:#if(USEMPI)
timestep.c:#if(USEMPI)
timestep.c:#if(USEMPI)
timestep.c:#if(DEBUGMPI>0)
timestep.c:#if(USEMPI)
timestep.c:#if(USEMPI)
timestep.c:#if(USEMPI)
timestep.c:#if(ALFVENLIMIT==0)
timestep.c:#if(VISCMEM)
utilfun.c:#if(LINUXCLUSTER==0)
utilfun.c:#if(USEMPI)
utilfun.c:#if(USEMPI)
utilfun.c:#if(TVDLF)
/u6/jon/thindisk1/
